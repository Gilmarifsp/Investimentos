<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADWHwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAH4hJREFUeJztnQd0VNeZx13itM06TvNuqk+S3ZSzm002xWne403xhg1C
        aEaMJCTRhZDpvWOBwbINmCKKBaJjikQXTaBGiTFoRjTbGBeK6TYGx4bEBeS73zeWWIrmvjdvZvTdN/P/
        n/M/OgZhPX33+//mvnbvbbdBEARBEARBEARBEARBEARB5sjn893ZsmXLL1zv/Pz8O6SPC4Igh6JQf7F1
        69a/SUlJyaavA+jrZPq6lL7uIL9Afp18kaws/Db9u7P8b+jrNvq6kr5OIw/xeDwZ9N+/btWq1T9J/74Q
        lJCioH+SgvgLcg8KY3FDwM/bCHZUTUC40PCzixqO5X4+Nun6QFBciYJ2T3JysocCVkjeTX6/ucMeBhQ+
        IO8hTyWn8KmFdP0gyFXic3GeypPHkHeRr0oHOwIg8LH7ySMIYv8oXVsIMlJ8UY6m0b+noMyg0JyRDm6M
        /DpB4GvStYYgY0Sh/ymHPkXgHF5oRrBWuuYQJCo+p2+4aLZXOpACfj8pKemz19eDTw2oJn/gawY0E/qK
        1LhAUExFjf59CkARNfrfmzN0bXypqlOXbNWjVxfVf1CeGj6qtxpbMPAWjxrTVw0b2UsNoO/p3rOLat8h
        U6WmemMxC7insSb039nkt6/7+8vkXMlxgqCoihr6QXIZNX59LALu9XpU19wOatTovmrG7DFq1fpCVfPc
        PLXvcKk6cna9euNyZUQ+em6Dqju0XFXsKFbL10xS02eNViMe6a0657QL+1jzHu744RuXK6a88W7FA16v
        94/0Zx818X0fESx/Jz1uEBSRqIn/SKF/LtqBz+3WURWMH6yWrpyodu1drE5dLI845E59/PwmtTOwUC0u
        GR+cReigkJbeRu2oXXDt347M73NZ83uulB4/CHIk+mT7LTVwTbQCz1NxDvzazdPVyyfXiYXdrl88ulqt
        3lCoHntycBAImVnpavS4/qr2+aU3fF+f/rm604Q66XGEoLBEwf8BNe/GaISepspq1vxxyv/CMnXuUoV4
        qGPhCZOHh/z9fb7U1Y11zc3NvYv+rCt5O4HhEM8OyPdLjjUEXZPP5/s8NeQkas4PIwl9Tm57NXdRAZ27
        l4iHszm896WS4AXKm+vg8XjUDv+Cy+cuVRYcPl32Zarr+iZmCHw9pTgpKenL0uMPJagantjLIb/hNPQc
        AJ4qb9+zgD7p5UPZ3N5cM0tlZWdcq0dWVoYq2zLj2t+Xb5v1nkUNL1L9u/ODVNL9ACWQWrVq9S88JXUa
        /I6dstTCZePVsTc2iodQ2icvlKttu+cHLxCeuLD5hr/jOw42a7qXX5CS7gsozsWf+tRsuSkf368OO/g9
        e+eolWVT1em3t4gHzw2evWBcOPW9Qn6UrxlI9wkUh/J6vf/KL+c4Df7W7bPj9oJerHzglRXK4wm73gdp
        nH4i3S9QHCk5OblNyo1PrNkyX83n23dn30XwnZrvhoRbdwIAXzsYhFWOoIj00EMP/QM10rxwG5AvbJWu
        m4LgR8kbK59WnTpnOwHBZvr6Jek+glwoapwfNtx3tt1w/Oz81BmP4OJeDMwXC+csKmjy1qGFT9AM7pfS
        /QS5SB6PpyU1zjvhNFq/gd2C97algxLvfv7IquC7CGFCgFdRwktGkLWoUfqEswqPL62NWrjsSUz3m9nr
        yqerzMz0cEEwC3cJoCbVokWLT1HwF4fTUIOGdKdPpJXiYUhUv3KqLPgWZJgQqKCxvlu63yCD1HCxr9xu
        E/EruHw+ik99efOtVX62Ij3DFw4EDrZs2fLr0n0HGaCG9fRtv7bLi2v8pW6ReOPDN3r/y6XB265hQOAo
        L9Ii3X+QoFq1avVtCv8rdpuGV83BFX5z/fpbm9SYxwbYhgCN/VsEgZ9L9yEkIK/Xex81wTG7zVI485GE
        fGHHbeZTAr4oy6dpNiHw1xS8XpxYSkpK+hZPAe00CN935qf5pBsbDs+8LBq/XWgT8Bd5hWbpvoSaQQ3h
        t/XJ3659W7XnwBLxZoadma8L8DUbmxB4G28Uxrl4Ywqa8h2x0xC8QAdu8bnfLx1fox7u0dnu6cAFgsCP
        pfsUioH43i8N8j47jdC9Z2d1+MRa8eaFo+Ojb2xQAwc/bHcmcJqvD0n3KxRF8a61NLCVdhqAG4VXu5Vu
        Wji65ncJ7D5CTDOB53mpN+m+haKj22lQF9oZeN44g28lSTcrHBvzEupDR/S0C4Ft/HSodPNCEYoGcqyd
        Ae83MA+f/AlgngkMGW4bAsuohW6X7mHIoZKTkz0pTe8+c4P79s9Vx97EAz6JYobA4KE97F4TGCbdx5AD
        8WOeDQ95WF7tf/V0mXhTws1rnu3xUm02ZgFXsVWZy8Q7ztLgvWg1uNnt2qqDr+FWX6Kad1qy85wAL/2O
        l4dcJBq0FVaDynvVRfqQD2/AyW8F8qaclTvniDc0HL5596X0dOs3CfmFMb6bJN3bkIVosDpYDSbvPlNe
        Myuixlm2etIt22fzHnhn3tkq3tRweOadj+28O0AQeEq6vyGN+O2+FBtLeRUvfCyihqk9uDRkw8xb/Lh4
        Q8Phe8mKiXYuCH5EHx6/l+5zqAk1bNW1zWoQh43sFfFCHpOnjQz5/+dzSulmhp35URuvElOPnSTfI93v
        0E2iQRliNXhdczsEHwuNtFF075zzzEC6kWFn5ofAuuXZWlSkWLrfoeuUnJz8nwSAD3SDxufru/c/E5VG
        4XP90NcXUsQbGXbuukPLgwu92pgJ/Fm676Hbgs/530kDstdqwKJ5bg4AxLdL1k62Mws4hfcFDBBvD201
        WH3650b16jwAEP+2+eLQROn+T2jxgp40COd1g8SrxfJmEtFsDgAgcu/ev0RNnDpcjS0YGDXz3Z1oXONh
        8+vgVvsO0IfPh1hYVFA0CLOsKL16Q2HUmxcAiMxLV060vWZfuO7YKSu4q3A0jnPFuil2rgVslc5BQoqK
        /zMqfr1ucIaP6h2TBgYAnJu3T7v5Aapou++AblE5Vl5glHvI6ufxVnLSeUg03W61ln9qG6868GpsnvMH
        AJybp+mxDH+jo7Wc24tHV1tuSMpLy+Mx4WYUFT3NqgFmFo+JWRMDAM49ZfqoZgHAc/uic8uXPWv+ODs/
        E5uPNpN4hZ8DusFo3yEzpot7AACJBYATFzYHry1Y/MzXMQtoBtH5ls9q8NdvnRnTJgYAEgsA7DWbpmEW
        YIAsP/0HDMoLXrwBAMy0WwHAu0Lx8ySYBQiqdevWqVYDvzMQ+407AYDYAeDizBlKzZ1j6TXDhzUrANjb
        9yywA5+u0jmJV/GV//1Wn/7N0cQAQGICgD1gkH5/AerR1/jNVOmwxJ345Qsr+u6oXQAAGG63A6B61zzL
        WQCeC4iBCADrTfj0BwASGwBsftDIYhawSTovcSUq6Dd5dVYTPv0BAACA13+0mAXwUvTfk85N3IiK+aiu
        4P0GRufRTwAAALBr3j/SYhaA9QOjoQcffPATVNBTumKv3TwdAHCJ4wUAvCisxSzgYlJS0mel8+N6USG9
        ukLzK5u80wsA4A7HCwB4+bCMjDSrWUC6dH5cLyriZl2Rp88a3exNDAAAAOxJmsVhGwCwVjo/rhYV8Uvk
        K7oi73+5FABwkeMJAPsOl1gB4ANetEY6R64VFbGzrsC8y6tEEwMAAECj+1o/HtxZOkeuldW9/3XlzXvx
        L14AwMtm8Xv5+WP7B/dJiNS8ft6EKcPVrn2LEw4Ai0vGWwGgQjpHrhRv8EkAeC9UYXlVmWit/5ZIADjw
        6grVqbP1hphOzL/74pIJCQWAl46vCW41pzkNuEqnAV+RzpPrRIXL1A3wyPw+YiFyMwCsnmWP1Axm3nAz
        UQDwcU3ztMfCvSydJ9eJCrdSV9RV66cCAGGaP61iGf5GF819NKEAYOOZgPnSeXKVGh7+eTdUQXlF2dfO
        rAcAwjR/MjcHACZOHZFQAOAlxC1OA85QW98unSvXiIr5C93gSl39BwAAgFDu3rOL9ngIAj+SzpVrRAXr
        ryvmM6X6C00AAADQ3ACYVjTaCgADpHPlGlHB1uiKWXtwKQAAABgFgKpn51rVZaN0rtwiXvnnzVCFTE/3
        RXWfPwDg/11aWqrs6NKlSwDATeb3USz2DzgvHSxXqFWrVv+mG9hY7fYDAAAAkXrw0O7aY6Le/rZ0vowX
        FSpPV8T5zzwhHiQAAABoyk/PeVR7TLykvXS+jFeKxYafOwMLxYMEAAAATXljVZH2mOjUdrx0vowXFWpH
        qALyU2anLjbvu/8AAABg17yPoAUAtknny3hRoc6HKmDew53EQwQAAAChzBvSZGVn6I7rbel8GS06R7pX
        N6hjHhsgHiIAAADQ2Wo78aSkpC9L58xYUYEe1BWPd2mVDhEAAADobPVAUHJy8i+lc2asUizuAMR6008A
        AACI1MvX6F8MollulnTOjFXr1q2n6Iqne80UAAAATACAjScC86VzZqwIAKUachpxBwAAAAB05gVXLACw
        SDpnxoqKsz1U4fjqqnSAogEAvlLM+xjkj+0XleW4GpfkmruoQJ14azMAIAyAM3/dGnxdXXNs26VzZqxo
        BnAoVOEe7tFZPPiRAoDDP+7xgVafEI6d262jOnI29DJpAEDz2GLJtRekc2asCABvhSrc4GE9xIMfKQD4
        kz9W4W90wfjBAIAwAHr1ydEd2znpnBkpn893JwGgPlTh+JNTOviRAoBX4Y01AHxpbYIzDQBADgC8YE2o
        46Ie//A2rA50qwgA/6wb0MKZj4gHP1IADBqif1ssWg51LQAAaB6PLdCf5rVo0eJu6bwZJ6vXgOctflw8
        +AAAAGDHTxWO0B6b1+v9jnTejBM/IaUr2rJVT4kHHwAAAOyYV0XWHZvH43lIOm/GKcXiMeAV66aIBx8A
        AADsmJ9Y1R0bXgtuQlSUP+mKtnrjNPHgxxIAmTm5qvjND2w5b/RjAIDBADhydn2wDzQAeF46b8aJipKi
        G9CyLTPEgw8AAAB2bbVpaFJS0rekM2eUkpOT2+gKZsqLQAAAAGDHsxeM0x4ffeDlSGfOKBEAknUF44do
        pIMPAAAAdv3s3sXa4yOvkM6cUbK6BrCyTG4vQAAAAAjXZ9+tUJlZ6bpjfCc3N/cu6dwZI5oA/E43oLwB
        o3TwAQAAIBxbPRBEfkA6d8aIZgC/0RVrccl48QEFAACAcMw7WOuOkXp+nHTujJHH4/mxrlh8UUV6QAEA
        ACAcW+0aTA5I584Y0SnA13QDOmnaSPEBBQAAgHDdvWdn3XF+RID4qnT2jJDP5/skFyRUscZQ6KQHEwAA
        AML1zGL9Y8F0GtBOOnvGiAryTqhCcXikBxMAAADC9bbd87XHSV4inTtjRDR8LVShTNkUBAAAAMIxLxHG
        O1prjvV8fn7+HdLZM0IEgJ2hCsVbL5+7JD+gAAAAEK5HjelrNQu4Xzp7RogKsVBXKL6qKj2YAAAAEK6t
        9gogPyKdPSNEM4DRukLtDCwSH0wAAAAI1zY2Dd0lnT0jlJyc3F5XqNUbC8UHEwAAAJyYV2zWAOAqff2S
        dP7ERUV4QDeofEtFeiABAADAia1+b4JAunT+xMUU1BVp6Iie4gMJAAAATlyxo1h7vOR50vkzQlSI10MV
        KSsrI+SS1wAAAGAyAHhM+E6WZgZw9jYsFx4EwDrdwL50fI34YAIAAIAT8wxWd8z8Pox0/sRFJByjK1J5
        zSzxgQQAAAAnXlwyQXvM5KHS+ROX1dqA02eNFh9IAAAAcOK9L5VYAaBGOn/iomnQvSmal4L69MsVH0gA
        AABw6k5dQm8cytuG+Xy+z0tnUFxUjMOhisRbLx97cyMAAAC4EgATpgzXHjfPgKXzJy4qwmxdkSp3zgEA
        AABXAmBTdZH2uMlF0vkTFxUhW1ekqTNkNwoFAAAAp+bZa2qqV3fsJ6TzJy6Px/MN3eB2zmkHAAAArgQA
        e8CgPKtZwA+lMyguKsIBXZECLy4HAAAAVwKAd7rWHXtycnI/6fyJi1dM1RVJcrtwAAAAiMS1B5dqj516
        f4t0/sRFpwG/0hWpV58cAAAAcCUAeGGbdu3b6gDwXlJS0melMygqXiaJn4/WDTI/WAEAAABuAwC7YPxg
        q1nAn6UzKC6r24FFc8cCAACAKwGwrny6FQCmSudPXFSIB3VF6tQ5O7gHGwAAALgNAEfObgj2igYAr0jn
        T1x8GpCieT2YzcsuAwAAgNsAwObH2nW/A/m70hkUF5HwcV2RJDYMAQAAgGh41vxx2t/B4/H0kM6fuKgI
        /64rEr8b0NxrBAAAAEA0vDOw0GoGUCadPyNEhXhWV6in5zTvWoEAAAAQDZ95Z6tq2zZN93tcbtGixaek
        8ycuOg3I1A12VnaGOnmhHAAAAFwFAPYYTS+xqff/IJ0/cTVsHHpOV6hlqycBAACA6wCwsmyq9vcgT5DO
        nxGiQjymK1SHjpnq1MXmmQUAAABAtMy7XVnMAJ6Xzp4R4jcEqRgf6IpVsnYyAAAAuAoA7Id7dNb+LklJ
        Sd+Szp8RomLM0RWKl1vi3VgBAADATQDgdS4tZgE50tkzQlSM75Kv6Iq1dOVEVwLA60tTOcNG2XJadvuY
        ACAvL0/l5+dbesSIETEDQN/27dWADh0s3SUjI24AUPPcPO3vQl4pnT1jRDRcpisWbx5y9NwG1wEgmnYK
        gGg5EgBEy24CwOm3t6j0DJ/u93knNzf3LunsGSECwI/I9brBn1YU26XDAQAAINoeNbqv9vehnv8v6ewZ
        IyrGYl2xUtt41fNHVgIAAIBrzLexdb9P/9yHl0jnzhh5vd77eNEEXcFGPNLbOACMzO8T88bnBSdDvSF5
        4NUVzRI+3eYt/NRmcxzDvsOl4qEOxwdfW6n9fXp36XpF1ez+hnT2jBEVZYJVE2yomGkUAKwoHw2PGt0n
        5M9nMPCCqrE+Br6oFeoY+O3NWP/8Ll3bi7wmHqm75nbQ9JVHnVtbtUeVlt4pnT0j5PP5vkiFuahrBF52
        6dgb0d9ExCkA+NlvGyvCOnZmVrp68ehq7bFX75pntSx1RB4/aZhl/Z6YODRmP59P/7bvWSAeZie2Oj2q
        mjFPqarAKOnsGSM6Dehu1RATJls3ZHMBgM1XfOcuKlA9enVRObnto+JueR3Vk08NVS+fXGfr+HlRyiHD
        e6rsdhnBuyaRmv8/ffrnqhXrptjavp3XxOOHtvjfRKsG/OmZP7a/qjskt1p0pN66fba2lycNGanqqwJX
        VEXdr6WzZ4Qa1g18zgoCXFhTAADDocwXb9v4UkP2Vvu2mepqlV/VVweOqE2775bOnxGiwvyMIHBVB4Ds
        dm3VK6fKojZQAAAcK/PMTNfLh5euUx9VBxgCM6WzZ4yoMIVWs4Dho3rbmp7aMQAAx8oLlz2p7eNlj09q
        AIC/XlUG8GwAq0WLFndTcY5ZQSBajwkDAHCszNcwdD08JK9nEAANs4CXVU3Np6XzZ4S8Xu9vrU4F+Or3
        zsCiiAcJAIBjZZ6lduyUFbK/vB6PemfTzush8Kh09owRFWii1SygfYfM4DvYkQwSAADH0hMmD9f28I6i
        hdcBwP+BqtjzPensGSFeP40KdNAKAv0G5gVvxzkdIAAAbsq81v+zexcHH3aKxDOLx2j7d+qwR64BIAiB
        Kv966ewZo1atWv0HFelvVhDg++ZOLwrqAeAJLvMEu8Or1heqPQeXRhR8/jB5qnBEcIVqq76LhjtlZXPo
        b4CAqqlrIZ09Y2S1iGijeV32aAMAdqd5rz6nS8rNmK3/xI6Fj5RsvHkWcEgFAnhluFFW+wo2evma8BcT
        BQDi07qXmEL5xIXNzfbJf71XTZh2AwCCs4BKf5507oxRhw4dPk0QqLMqJA/elm3hPSkIAMSn+Sm8cJeX
        59eOJY51xogxtwCgvtp/Wu3a9Rnp7Bmjli1bfp0gcNKqmPwCScWOYtuDPrZgoHizwrFxuLtM7ahdIHKc
        y5+YfAsAgrOA6kAf6dwZJY/H81Mq2GWrgjIEKnfOsTXoxQv1i3LC7nRmZnrwjU3TAeBLTVXn1lY2CYD6
        Kv+bquaFz0nnziglJyd7rJYRY/MUUPcue6OPvbkxuDW5dMPC0bWTzWWaGwCZaelq95ylTYb/2iygKjBQ
        OnPGiYrX306BGQLlNq4J7H2pRPXqkyPetHDk5jFftHx88DXlaAOgoP9gtXJ8YcRePXFa8AGgd697CjCU
        g9cCSl/4pHTmjFOKxe5CjeYLg/xuu9Xg83ME+w6XRPzgByxnfnDn+PlNYQffLgDWT37aMrCxsKoOdJDO
        m5FKsfG4cKOL5o513BhwYthUANRXBZ5XSt0unTcTdXuKxQ5D13vOogLxJoPNtakAaJgF/Ek6bEbK5/Pd
        SYOz0O7pwKFj+nX24MS1yQCor/aXSWfNWDUsJzbdDgTWbp4u3miwmTYbAIGranvtN6WzZrQIAqOtAODk
        cWE4MWwyAD4+DfCPkM6Y8SIIjAMAYCc2HQD1VYGjKl/dIZ0xo+XxeH4PAMBObDoAgrOAmto/SmfMaAEA
        sFO7AQA0C5gjnTGjBQDATu0OAPgv4slAjQAA2KndAIDgaUBl7f9K58xYAQCwU7sFADQLmC+dM2MFAMBO
        7RoAVAcuYGfhEAIAYKd2CwCCpwFVtb+RzpqRAgBgp3YTALCJSAgBALBTuwwAtdJZM1IAAOzU7gKAv15t
        2X+vdN6MEwAAO7WbAMBWNf420nkzTgAA7NRuAwDNAiZL5804AQCwU7sOAFV+v3TejBMAADu1+wAQuIJl
        w28SAAA7tdsAwFaVgd9JZ84oAQCwU7sSANX+/tKZM0oAAOzUbgQA3gu4SQAA7NSuBEB1oE46c0YJAICd
        2p0A8L+vamo+IZ07YwQAwE7tRgCwVU3gB9K5M0YAAOzUrgVAlf/P0rkzRgAA7NSuBUB1oId07owRAAA7
        tVsBUF/tnyCdO2MEAMBO7VoAVAVWSOfOGAEAsFO7FwB4J+CaAADYqd0LgMAJ6dwZIwAAdmoXA+Dv0rkz
        RgAA7NRuBQBb7dr1GensGSEAAHZqVwMAW4d/LAAAdmpXA6Bmz0+ks2eEAADYqV0NgIq6X0tnzwgBALBT
        V/5ljhYAm6fOFg96SABU1z4onT0jBADATr1i3RQtAHYULRIPekgAVAX+Rzp7RggAgJ16bMFALQBeWb5e
        POghAVATSJLOnhECAGAnPnxirfKltQnZN2lt2qj3tj4nHnTNKUCqdPaMEAAAh+tzlyosP/0L+g8WD7nF
        DCBFOntGCACAwzGHf/aCcdrwsyumzxEPuR4AdS2ks2eEAADYrl86vkaNGdffMvwd2mapv5XvEg+5HgD+
        /5bOnhECAMzx2XcrVO3BpWpnYKF6/a1N2u898OoKtW33/Jh76/ZitWz1JDWagt/Gl2oZfvbGKUXiAbdx
        CvAr6ewZIQAg9j5+fpNasmKimjRtpFqw5An16umyW75nz4Elqltex2t1z8hIU6vWF97yffxvR43uayuI
        Eu7Vuau6UlkrHnBrAOBJwKAAgNh63+FS1alL9g01zcrOCH7KN37PK6fKgn/WVP3Lt82+9n3nLlWqwUO7
        i4c8lDPT0tXxFZvFw21zBoCFQVkAQOzMge3dt2uTde2c006dvFAe/L6iuY+G/kTtk3Pt/1e9a554yEPZ
        6/Gouvkl4sG2DYDtga9KZ88IAQCxc92h5drQPLtpsXr36E5VkD845Pekp/uC38NetbBQPOhNOSs9w1Xh
        r68OXFWlpXdKZ88IAQCxM19E09V229MLgg05b8zjIb+nZ+eca437XPES8bDfbD7nP7lqi3iowwJAVeCs
        dO6MEQAgB4CamfODDXlmTYXK8KU1+T2V0+dea9wPKnar3l2aPqVobvOtPr7a74YLfk0AYJ907owRACAP
        ALZ/3vJgqBr/LtXrVUsLnrqlefnTtl/XbiKh96W2UaN69g2+5Wf6fX49APybpXNnjAAAMwDAvlz+rNpV
        /Ezwz8+uqQzZwPypu3/hCrVlWrEqL5wdU1fQDISP6bWSDer9rbvFwxslAGCH4EYBAOYAAG4mAFQHxkrn
        zhgBAABAollVB7Kkc2eMAAAAINGsaup+Lp07YwQAAACJZDr//0ht2n23dO6MEQAAACSS66sCJ6UzZ5QA
        AAAgkUwAqJDOnFECAACARHJ9dWCSdOaMEgAAACSSVVUgTTpzRgkAAAASyaoi8C3pzBklAAAASBTT+f8Z
        6bwZJwAAAEgU11f7V0nnzTgBAABAolhV+wdL5804AQAAQKJYVfrvl86bcQIAAIBEMJ3/n1f56g7pvBkn
        AAAASATXV/mfkc6akQIAAIBEMN4ADCEAAACId9dX++vVlv33SmfNSAEAAEC8u746sEc6Z8YKAAAA4t2q
        KjBQOmfGCgAAAOLZwff/q+ruk86ZsQIAAIB4Np3/b5fOmNECAACAeLaq9OdJZ8xoAQAAQLy6vipwBVf/
        LQQAAADxapr+l0nny3gBAABAvFpVB/4knS/jZQWAYSN7qaK5Y2EHHvfEIABAyPXVgdfw7L8NWQEAjp0B
        gNhZVfn7SWfLFQIAAIB4c31V4O+qfNcXpbPlCgEAAEC8mQBQLJ0r14ga8QHpICSq/zJ7sXhY4s107n9V
        VdV+XzpXrlHLli2/QM34vnQYEs2eFI86vXqreGDizfTpv0w6U64TNeQw6UAkmovzHxMPS7w5+Nz/tsCP
        pPPkOuXn599BTdmndevWf5UORrw7w5emlj8xWV2prBUPTLwZq/5GqNzc3Lu8Xu995O9E20dLN1WfXVup
        EtnnyB9W7hEPSrwa234bLFXzwufUzoNfgOGYuGbfPdI9DkEQBEEQBEEQBEEQBEFQHOr/APCeRFY0RduJ
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>